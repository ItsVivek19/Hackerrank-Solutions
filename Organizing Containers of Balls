#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

string organizingContainers(vector<vector<int>> container) {
    int n = container.size();
    vector<long long> containerCapacity(n, 0);
    vector<long long> typeCount(n, 0);

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            containerCapacity[i] += container[i][j];  // total balls in container i
            typeCount[j] += container[i][j];          // total balls of type j
        }
    }

    sort(containerCapacity.begin(), containerCapacity.end());
    sort(typeCount.begin(), typeCount.end());

    return (containerCapacity == typeCount) ? "Possible" : "Impossible";
}

int main() {
    int q;
    cin >> q;
    while (q--) {
        int n;
        cin >> n;
        vector<vector<int>> container(n, vector<int>(n));
        for (int i = 0; i < n; ++i)
            for (int j = 0; j < n; ++j)
                cin >> container[i][j];
        cout << organizingContainers(container) << "\n";
    }
    return 0;
}
