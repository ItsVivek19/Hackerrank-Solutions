#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>
using namespace std;

int minimumLoss(vector<long long>& prices) {
    int n = prices.size();
    vector<pair<long long, int>> v(n);
    for (int i = 0; i < n; ++i) {
        v[i] = {prices[i], i};
    }
    sort(v.begin(), v.end()); // Sort prices ascendingly
    long long minLoss = LLONG_MAX;
    for (int i = 1; i < n; ++i) {
        long long diff = v[i].first - v[i-1].first;
        // Must sell after buy (higher index before lower index)
        if (v[i].second < v[i-1].second && diff < minLoss) {
            minLoss = diff;
        }
    }
    return static_cast<int>(minLoss);
}

int main() {
    int n;
    cin >> n;
    vector<long long> prices(n);
    for (int i = 0; i < n; ++i) {
        cin >> prices[i];
    }
    cout << minimumLoss(prices) << endl;
    return 0;
}
